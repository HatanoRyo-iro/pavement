filename = "kmeans-plus.pdf",
plot     = points_plot,
height   = 4,
width    = 4,
units    = "in",
device   = cairo_pdf
)
# 描画
points_plot <- ggplot() +
geom_point(data = data, aes(x, y), size = 2) +
geom_point(data = data[3, ], aes(x, y), size = 5, shape = 1, stroke = 1) +
coord_fixed() +
scale_x_continuous(limits = c(0, 10)) +
scale_y_continuous(limits = c(0, 10)) +
xlab(expression(italic("x"))) +
ylab(expression(italic("y"))) +
theme_bw(base_size = 14) +
theme(
panel.grid = element_blank(),
axis.title = element_text(family = "Times New Roman", colour = "black"),
axis.text  = element_text(colour = "black")
)
# 画像の出力
ggsave(
filename = "kmeans-plus.pdf",
plot     = points_plot,
height   = 4,
width    = 4,
units    = "in",
device   = cairo_pdf
)
# データ描画用のライブラリの読み込み
library(ggplot2)
# データを作成
set.seed(123)
data <- data.frame(x = runif(50), y = runif(50))
# 初期のクラスタ中心をランダムに選ぶ
set.seed(123)
initial_centers <- data[sample(1:nrow(data), 3), ]
initial_centers$cluster <- factor(1:3)
# 点と中心を比較して，最も近いクラスタを返す関数
calc_cluster <- function(point, centers) {
dist <- apply(centers[1:2], 1, function(center) {
sum((center - point) ^ 2)
})
centers$cluster[which.min(dist)]
}
centers <- initial_centers
clusters_by_steps <- list()
centers_by_steps <- list()
for (i in 1:5) {
# クラスタを計算
clusters <- apply(data, 1, calc_cluster, centers)
# クラスタごとにデータを分割
points_in_cluster <- split(data, clusters)
# 新しい重心を計算
new_centers <- lapply(points_in_cluster, function(points) {
data.frame(x = mean(points$x), y = mean(points$y))
})
center_clusters <- factor(names(new_centers))
new_centers <- as.data.frame(do.call(rbind, new_centers))
new_centers$cluster <- center_clusters
# クラスタ中心を更新
centers <- new_centers
# ステップごとのクラスタとクラスタ中心を記録
clusters_by_steps <- append(clusters_by_steps, list(clusters))
centers_by_steps <- append(centers_by_steps, list(centers))
}
# 出力するグラフのテーマを設定
theme_set(
theme_bw(base_size = 14) +
theme(
legend.position = "none",
panel.grid = element_blank()
)
)
ggplot() +
geom_point(
data = data,
mapping = aes(x = x, y = y)
) +
geom_point(
data = initial_centers,
mapping = aes(x = x, y = y, colour = cluster),
shape = 1,
stroke = 1,
size = 4
)
# 出力するグラフのテーマを設定
theme_set(
theme_bw(base_size = 14) +
theme(
legend.position = "none",
panel.grid = element_blank()
) +
coord_fixed()
)
# 出力するグラフのテーマを設定
theme_set(
theme_bw(base_size = 14) +
theme(
legend.position = "none",
panel.grid = element_blank()
)
)
# 初期状態（Step1）
step_1 <-
ggplot() +
geom_point(
data = data,
mapping = aes(x = x, y = y)
) +
geom_point(
data = initial_centers,
mapping = aes(x = x, y = y, colour = cluster),
shape = 1,
stroke = 1,
size = 4
) +
coord_fixed()
ggplot() +
geom_point(
data = data,
mapping = aes(x = x, y = y)
) +
geom_point(
data = initial_centers,
mapping = aes(x = x, y = y, colour = cluster),
shape = 1,
stroke = 1,
size = 4
) +
coord_fixed()
# 出力するグラフのテーマを設定
theme_set(
theme_bw(base_size = 14) +
theme(
axis.text       = element_blank(),
axis.ticks      = element_blank(),
legend.position = "none",
panel.grid      = element_blank()
)
)
ggplot() +
geom_point(
data = data,
mapping = aes(x = x, y = y)
) +
geom_point(
data = initial_centers,
mapping = aes(x = x, y = y, colour = cluster),
shape = 1,
stroke = 1,
size = 4
) +
coord_fixed()
ggplot() +
geom_point(
data = data,
mapping = aes(x = x, y = y),
size = 2
) +
geom_point(
data = initial_centers,
mapping = aes(x = x, y = y, colour = cluster),
shape = 1,
stroke = 1,
size = 5
) +
coord_fixed()
# 出力するグラフのテーマを設定
theme_set(
theme_bw(base_size = 14) +
theme(
axis.text       = element_blank(),
axis.ticks      = element_blank(),
axis.title      = element_text(family = "Times New Roman")
legend.position = "none",
# 出力するグラフのテーマを設定
theme_set(
theme_bw(base_size = 14) +
theme(
axis.text       = element_blank(),
axis.ticks      = element_blank(),
axis.title      = element_text(family = "Times New Roman"),
legend.position = "none",
panel.grid      = element_blank(),
)
)
ggplot() +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4) +
theme_bw(base_size = 14) +
theme(
legend.position = "none",
panel.grid = element_blank()
) +
coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
xlab(expression(italic("x"))) +
ylab(expression(italic("y")))
# 初期状態（Step1）
step_1 <-
ggplot() +
geom_point(
data = data,
mapping = aes(x = x, y = y),
size = 2
) +
geom_point(
data = initial_centers,
mapping = aes(x = x, y = y, colour = cluster),
shape = 1,
stroke = 1,
size = 5
) +
coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
xlab(expression(italic("x"))) +
ylab(expression(italic("y")))
step_1
# 初期状態（Step1）
centers <- initial_centers
step_1 <-
ggplot() +
geom_point(data = data, aes(x = x, y = y), size = 2) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1,
stroke = 1,
size = 5
) +
coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
xlab(expression(italic("x"))) +
ylab(expression(italic("y")))
step_1
# 最初のクラスタ配属（Step2）
clusters <- clusters_by_steps[[1]]
centers <- initial_centers
step_2 <-
ggplot() +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4) +
theme_bw(base_size = 14) +
theme(
legend.position = "none",
panel.grid = element_blank()
) +
coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
xlab(expression(italic("x"))) +
ylab(expression(italic("y")))
step_2
# 出力するグラフのテーマを設定
theme_set(
theme_bw(base_size = 14) +
theme(
axis.text       = element_blank(),
axis.ticks      = element_blank(),
axis.title      = element_text(family = "Times New Roman"),
legend.position = "none",
panel.grid      = element_blank(),
)
)
step_2 <-
ggplot() +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4) +
coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
xlab(expression(italic("x"))) +
ylab(expression(italic("y")))
step_2
step_1
step_3 <-
ggplot() +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4) +
coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
xlab(expression(italic("x"))) +
ylab(expression(italic("y")))
step_3
# 最終状態（Step-n）
clusters <- clusters_by_steps[[5]]
centers <- centers_by_steps[[5]]
step_n <-
ggplot() +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4) +
coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
xlab(expression(italic("x"))) +
ylab(expression(italic("y")))
step_n
step_2 <-
ggplot() +
coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
xlab(expression(italic("x"))) +
ylab(expression(italic("y")))
step_2
# キャンバスの設定
canvas <- ggplot() +
coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
xlab(expression(italic("x"))) +
ylab(expression(italic("y")))
step_1 <- canvas +
geom_point(data = data, aes(x = x, y = y), size = 2) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1,
stroke = 1,
size = 5
)
step_1
# 初期状態（Step-1）
centers <- initial_centers
step_1 <- canvas +
geom_point(data = data, aes(x = x, y = y), size = 2) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1,
stroke = 1,
size = 5
)
step_1
# 最初のクラスタ配属（Step-2）
clusters <- clusters_by_steps[[1]]
centers <- initial_centers
step_2 <- canvas +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4) +
# クラスタ中心が移動したあとの状態（step-3）
clusters <- clusters_by_steps[[1]]
step_2
step_3 <- canvas +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4)
step_2 <- canvas +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4) +
# クラスタ中心が移動したあとの状態（step-3）
clusters <- clusters_by_steps[[1]]
centers <- centers_by_steps[[1]]
step_3 <- canvas +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4)
step_3 <- canvas +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4)
step_2 <- canvas +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4) +
# クラスタ中心が移動したあとの状態（step-3）
clusters <- clusters_by_steps[[1]]
centers <- centers_by_steps[[1]]
clusters
step_2 <- canvas +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4) +
# クラスタ中心が移動したあとの状態（step-3）
clusters <- clusters_by_steps[[1]]
# 初期状態（Step-1）
centers <- initial_centers
step_1 <- canvas +
geom_point(data = data, aes(x = x, y = y), size = 2) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 5)
step_1
# 画像の出力
ggsave(
filename = "kmeans-step1.pdf",
plot     = step_1,
height   = 4,
width    = 4,
units    = "in",
device   = cairo_pdf
)
step_2 <- canvas +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4)
# 画像の出力
ggsave(
filename = "kmeans-step2.pdf",
plot     = step_1,
height   = 4,
width    = 4,
units    = "in",
device   = cairo_pdf
)
# 最初のクラスタ配属（Step-2）
clusters <- clusters_by_steps[[1]]
centers <- initial_centers
step_2 <- canvas +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4)
# 画像の出力
ggsave(
filename = "kmeans-step2.pdf",
plot     = step_1,
height   = 4,
width    = 4,
units    = "in",
device   = cairo_pdf
)
# 画像の出力
ggsave(
filename = "kmeans-step2.pdf",
plot     = step_2,
height   = 4,
width    = 4,
units    = "in",
device   = cairo_pdf
)
# クラスタ中心が移動したあとの状態（step-3）
clusters <- clusters_by_steps[[1]]
centers <- centers_by_steps[[1]]
step_3 <- canvas +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4)
# 画像の出力
ggsave(
filename = "kmeans-step3.pdf",
plot     = step_3,
height   = 4,
width    = 4,
units    = "in",
device   = cairo_pdf
)
# 最終状態（Step-n）
clusters <- clusters_by_steps[[5]]
centers <- centers_by_steps[[5]]
step_n <- canvas +
geom_point(data = data, aes(x = x, y = y, colour = clusters)) +
geom_point(data = centers, aes(x = x, y = y, colour = cluster),
shape = 1, stroke = 1, size = 4)
# 画像の出力
ggsave(
filename = "kmeans-stepn.pdf",
plot     = step_n,
height   = 4,
width    = 4,
units    = "in",
device   = cairo_pdf
)
library(osmdata)
getbb("愛知大学")
data <- getbb("愛知大学") |>
opq() |>
osmdata_sf()
data
library(tidyverse)
data |>
pluck("osm_polygon")
data |>
pluck("osm_polygons")
data |>
pluck("osm_polygons") |>
plot()
library(sf)
data |>
pluck("osm_polygons") |>
plot()
data <- getbb("愛知大学") |>
opq() |>
osmdata_sf()
polygons <- data |>
pluck("osm_polygons")
library(tmap)
tm_shape(polygons) +
tm_polygons()
tmap_mode("view")
tmap_mode("view") +
tm_shape(polygons) +
tm_polygons()
tmap_mode("view") +
tm_shape(polygons) +
tm_polygons() +
tm_basemap(server = "OpenStreetMap")
tmap_mode("view") +
tm_shape(polygons) +
tm_polygons(border.col = "blue") +
tm_basemap(server = "OpenStreetMap")
tmap_mode("view") +
tm_shape(polygons) +
tm_polygons(border.col = "blue", col = NA) +
tm_basemap(server = "OpenStreetMap")
tmap_mode("view") +
tm_shape(polygons) +
tm_lines()
tmap_mode("view") +
tm_shape(polygons) +
tm_polygons(border.col = "blue", col = "transparent") +
tm_basemap(server = "OpenStreetMap")
tmap_mode("view") +
tm_shape(polygons) +
tm_polygons(border.col = "blue", col = "blue") +
tm_basemap(server = "OpenStreetMap")
?tm_polygons
tmap_mode("view") +
tm_shape(polygons) +
tm_polygons(border.col = "blue", alpha = 0) +
tm_basemap(server = "OpenStreetMap")
setwd("~/../../Dropbox/Projects/pavement/")
?usethis::create_tidy_package()
usethis::create_tidy_package(".")
